(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5480],{95480:function(e){"use strict";e.exports=JSON.parse('{"md":"\\n# Platform\\n\\n\\n\\n| Field | Description | Type | Reference | Nullable | Deprecated |\\n|-------|-------------|------|-----------|----------|------------|\\n| id | `Platform` ID | ID | [ID](/api-docs/id) | No | No |\\n| type | Platform type | PlatformType | [PlatformType](/api-docs/platform-type) | No | No |\\n| tag_manager_account | The `TagManagerAccount` that contains this `Platform` | TagManagerAccount | [TagManagerAccount](/api-docs/tag-manager-account) | No | No |\\n| name | `Platform` name | String | [String](/api-docs/string) | No | No |\\n| description | `Platform` description | String | [String](/api-docs/string) | No | No |\\n| platform_revisions | `PlatformRevision`s the are linked to this `Platform`. Please note that if the `Platform` has been made public and `PlatformRevision` has been published, it will be avalible to ***any*** Scale8 Tag Manager User to install in their `App` | List[PlatformRevision] | [PlatformRevision](/api-docs/platform-revision) | No | No |\\n| is_public | If the platform has been published, this flag will be true. | Boolean | [Boolean](/api-docs/boolean) | No | No |\\n| created_at | Date the `Platform` was created at | DateTime | [DateTime](/api-docs/date-time) | No | No |\\n| updated_at | Date the `Platform` was last updated at | DateTime | [DateTime](/api-docs/date-time) | No | No |\\n\\n## Queries\\n\\n*Queries provide a function on the graph to access Platform entities. This should be considered the same as RESTful \'GET\'*\\n\\n---\\n\\n### Get Platform\\n\\n```graphql\\ngetPlatform(id: ID!): Platform\\n\\n```\\n\\nMethod will return a `Platform` instance from its ID.\\n\\n!&gt; Note that if the `Platform` has been made public, it will be accessible to ***any*** Scale8 Tag Manager User.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| id | -- | ID | [ID](/api-docs/id) | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Platform | [Platform](/api-docs/platform) |\\n\\n\\n\\n\\n---\\n\\n### Get Public Platforms\\n\\n```graphql\\ngetPublicPlatforms: [Platform]\\n\\n```\\n\\nMethod will return a list of public `Platform`&#039;s.\\n\\n!&gt; Note that if the `Platform` has not been made public it will not be in the list.\\n\\n**Arguments**: *None*\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| List[Platform] | [Platform](/api-docs/platform) |\\n\\n\\n\\n\\n## Mutations\\n\\n*Mutations enable us to create, modify and delete Platform entities. POST/PUT/DELETE methods in a RESTful API would typically provide this functionality*\\n\\n---\\n\\n### Create Platform\\n\\n```graphql\\ncreatePlatform(platformCreateInput: PlatformCreateInput!): Platform\\n\\n```\\n\\nCreate a new `Platform`.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| platformCreateInput | -- | PlatformCreateInput | *PlatformCreateInput* | Yes |  | No |\\n\\n\\n**PlatformCreateInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| type | Platform type | PlatformType | [PlatformType](/api-docs/platform-type) | Yes |  | No |\\n| tag_manager_account_id | ID of the `TagManagerAccount` under which to create the platform | ID | [ID](/api-docs/id) | Yes |  | No |\\n| name | Name of the new `Platform` | String | [String](/api-docs/string) | Yes |  | No |\\n| description | Description of the new `Platform` | String | [String](/api-docs/string) | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Platform | [Platform](/api-docs/platform) |\\n\\n\\n\\n\\n---\\n\\n### Update Platform\\n\\n```graphql\\nupdatePlatform(platformUpdateInput: PlatformUpdateInput!): Boolean\\n\\n```\\n\\nUpdate a `Platform`.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| platformUpdateInput | -- | PlatformUpdateInput | *PlatformUpdateInput* | Yes |  | No |\\n\\n\\n**PlatformUpdateInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| platform_id | ID of the `Platform` to be updated | ID | [ID](/api-docs/id) | Yes |  | No |\\n| name | Name of the `Platform` | String | [String](/api-docs/string) | No |  | No |\\n| description | Description of the `Platform` | String | [String](/api-docs/string) | No |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Boolean | [Boolean](/api-docs/boolean) |\\n\\n\\n\\n\\n---\\n\\n### Publish Platform\\n\\n```graphql\\npublishPlatform(platformPublishInput: PlatformPublishInput!): Boolean\\n\\n```\\n\\nUpdate a `Platform`.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| platformPublishInput | -- | PlatformPublishInput | *PlatformPublishInput* | Yes |  | No |\\n\\n\\n**PlatformPublishInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| platform_id | ID of the `Platform` to be updated | ID | [ID](/api-docs/id) | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Boolean | [Boolean](/api-docs/boolean) |\\n\\n\\n\\n"}')}}]);