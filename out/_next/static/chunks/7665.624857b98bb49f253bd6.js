(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7665],{7665:function(e){"use strict";e.exports=JSON.parse('{"md":"\\n# AppPlatformRevision\\n\\nThe `AppPlatformRevision` model holds the relationship between `Revision` and `PlatformRevision` with respect to the `App`. A `Revision` is therefore tied to one or more `PlatformRevision`s although only one `PlatformRevision` per `Platform`\\n\\n| Field | Description | Type | Reference | Nullable | Deprecated |\\n|-------|-------------|------|-----------|----------|------------|\\n| id | `AppPlatformRevision` ID | ID | [ID](/api-docs/id) | No | No |\\n| platform_revision | `PlatformRevision` that is currently linked to this `AppPlatformRevision` | PlatformRevision | [PlatformRevision](/api-docs/platform-revision) | No | No |\\n| platform_settings | `DataMap` that implements platform settings and currently attached to this `AppPlatformRevision` | List[DataMap] | [DataMap](/api-docs/data-map) | No | No |\\n| created_at | The date the `AppPlatformRevision` was created at | DateTime | [DateTime](/api-docs/date-time) | No | No |\\n| updated_at | The date the `AppPlatformRevision` was last updated at | DateTime | [DateTime](/api-docs/date-time) | No | No |\\n\\n## Queries\\n\\n*Queries provide a function on the graph to access AppPlatformRevision entities. This should be considered the same as RESTful \'GET\'*\\n\\n---\\n\\n### Get App Platform Revision\\n\\n```graphql\\ngetAppPlatformRevision(id: ID!): AppPlatformRevision\\n\\n```\\n\\nGet an `AppPlatformRevision` model from `AppPlatformRevision` ID\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| id | -- | ID | [ID](/api-docs/id) | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| AppPlatformRevision | [AppPlatformRevision](/api-docs/app-platform-revision) |\\n\\n\\n\\n\\n## Mutations\\n\\n*Mutations enable us to create, modify and delete AppPlatformRevision entities. POST/PUT/DELETE methods in a RESTful API would typically provide this functionality*\\n\\n---\\n\\n### Link Platform Revision\\n\\n```graphql\\nlinkPlatformRevision(appPlatformRevisionLinkInput: AppPlatformRevisionLinkInput!): [PlatformRevisionMergeIssue]\\n\\n```\\n\\nLink an app and platform together via their corresponding revisions.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| appPlatformRevisionLinkInput | -- | AppPlatformRevisionLinkInput | *AppPlatformRevisionLinkInput* | Yes |  | No |\\n\\n\\n**AppPlatformRevisionLinkInput**\\n\\n*Parameters required to link a `PlatformRevision` with a `Revision`. The &#039;data_maps&#039; provided are used to implement the `Platform` settings of the `Platform`.*\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| revision_id | `Revision` ID | ID | [ID](/api-docs/id) | Yes |  | No |\\n| platform_revision_id | `PlatformRevision` ID | ID | [ID](/api-docs/id) | Yes |  | No |\\n| data_maps | An array of `DataMapInput`s that will create corresponding `DataMap`s that implement the `PlatformDataMap` described by platform settings on `Platform` | List[DataMapInput] | *DataMapInput* | Yes |  | No |\\n| preview | Preview the outcome before commiting | Boolean | [Boolean](/api-docs/boolean) | No | false | No |\\n\\n**DataMapInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| key | `DataMap` key | String | [String](/api-docs/string) | Yes |  | No |\\n| var_type | `DataMap` variable type (string, int, boolean, array of strings, object etc.) | VarType | [VarType](/api-docs/var-type) | Yes |  | No |\\n| value | A single value, string, int, boolean etc. | DataMapValue | [DataMapValue](/api-docs/data-map-value) | No |  | No |\\n| values | An array of values, string[], int[], boolean[] etc. | List[DataMapValue] | [DataMapValue](/api-docs/data-map-value) | Yes |  | No |\\n| children | A single object, {...} | List[DataMapInput] | *DataMapInput* | Yes |  | No |\\n| repeated_children | An array of objects, {...}[] | List[List[DataMapInput]] | *DataMapInput* | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| List[PlatformRevisionMergeIssue] | [PlatformRevisionMergeIssue](/api-docs/platform-revision-merge-issue) |\\n\\n\\n\\n\\n---\\n\\n### Unlink Platform Revision\\n\\n```graphql\\nunlinkPlatformRevision(appPlatformRevisionUnlinkInput: AppPlatformRevisionUnlinkInput!): [PlatformRevisionMergeIssue]\\n\\n```\\n\\nDelete an `AppPlatformRevision` and its children.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| appPlatformRevisionUnlinkInput | -- | AppPlatformRevisionUnlinkInput | *AppPlatformRevisionUnlinkInput* | Yes |  | No |\\n\\n\\n**AppPlatformRevisionUnlinkInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| app_platform_revision_id | `AppPlatformRevision` ID to delete against | ID | [ID](/api-docs/id) | Yes |  | No |\\n| preview | Preview the outcome before commiting | Boolean | [Boolean](/api-docs/boolean) | No | false | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| List[PlatformRevisionMergeIssue] | [PlatformRevisionMergeIssue](/api-docs/platform-revision-merge-issue) |\\n\\n\\n\\n"}')}}]);