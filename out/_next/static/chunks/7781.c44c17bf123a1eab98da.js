(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7781],{47781:function(e){"use strict";e.exports=JSON.parse('{"md":"\\n# Trigger\\n\\nA `Trigger` describes a set of events that must all be fired for a `Trigger` to complete. It also specifies an optional list of both conditions and exceptions (`ConditionRule`) that too must all be satisfied in order for the `Trigger` to be fired.\\n\\n| Field | Description | Type | Reference | Nullable | Deprecated |\\n|-------|-------------|------|-----------|----------|------------|\\n| id | The ID of the `Trigger` | ID | [ID](/api-docs/id) | No | No |\\n| name | The name of the `Trigger` | String | [String](/api-docs/string) | No | No |\\n| revision | Revision | Revision | [Revision](/api-docs/revision) | No | No |\\n| parent_type | Type of entity this model is bound to | RevisionEntityParentType | [RevisionEntityParentType](/api-docs/revision-entity-parent-type) | No | No |\\n| events | A list of events that must be satisfied in order for a `Trigger` to be triggered. | List[Event] | [Event](/api-docs/event) | No | No |\\n| condition_rules | A series of `ConditionRule`&#039;s that must all happen before any actions can be performed from this `Trigger` | List[ConditionRule] | [ConditionRule](/api-docs/condition-rule) | No | No |\\n| exception_rules | Exceptions describe an optional set of `ConditionRule`&#039;s that will preclude a `Trigger` from being triggered | List[ConditionRule] | [ConditionRule](/api-docs/condition-rule) | No | No |\\n| created_at | Date the trigger was created | DateTime | [DateTime](/api-docs/date-time) | No | No |\\n| updated_at | Date the trigger was last updated | DateTime | [DateTime](/api-docs/date-time) | No | No |\\n\\n## Queries\\n\\n*Queries provide a function on the graph to access Trigger entities. This should be considered the same as RESTful \'GET\'*\\n\\n---\\n\\n### Get Trigger\\n\\n```graphql\\ngetTrigger(id: ID!): Trigger\\n\\n```\\n\\nGet a `Trigger` model from the `Trigger` ID\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| id | -- | ID | [ID](/api-docs/id) | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Trigger | [Trigger](/api-docs/trigger) |\\n\\n\\n\\n\\n## Mutations\\n\\n*Mutations enable us to create, modify and delete Trigger entities. POST/PUT/DELETE methods in a RESTful API would typically provide this functionality*\\n\\n---\\n\\n### Create Trigger\\n\\n```graphql\\ncreateTrigger(triggerCreateInput: TriggerCreateInput!): Trigger\\n\\n```\\n\\nCreate a new `Trigger`\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| triggerCreateInput | -- | TriggerCreateInput | *TriggerCreateInput* | Yes |  | No |\\n\\n\\n**TriggerCreateInput**\\n\\n*A `Trigger` can only be created on a `Revision`. A `Rule` has an immutable, persistant `Trigger` associated with it.*\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| revision_id | The `Rule` under which the `Trigger` should be created | ID | [ID](/api-docs/id) | Yes |  | No |\\n| name | The name of the new `Rule` | String | [String](/api-docs/string) | Yes |  | No |\\n| comments | Any additional user comments for the audit | String | [String](/api-docs/string) | No |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Trigger | [Trigger](/api-docs/trigger) |\\n\\n\\n\\n\\n---\\n\\n### Duplicate Trigger\\n\\n```graphql\\nduplicateTrigger(triggerDuplicateInput: TriggerDuplicateInput!): Trigger\\n\\n```\\n\\nDuplicate a `Trigger`. The duplicated will copy everything beneath `Trigger`, creating a new `Trigger` entity and linking it back to the same parent entity.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| triggerDuplicateInput | -- | TriggerDuplicateInput | *TriggerDuplicateInput* | Yes |  | No |\\n\\n\\n**TriggerDuplicateInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| trigger_id | `Trigger` ID to clone against | ID | [ID](/api-docs/id) | Yes |  | No |\\n| name | New name for the `Trigger` | String | [String](/api-docs/string) | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Trigger | [Trigger](/api-docs/trigger) |\\n\\n\\n\\n\\n---\\n\\n### Update Trigger\\n\\n```graphql\\nupdateTrigger(triggerUpdateInput: TriggerUpdateInput!): Boolean\\n\\n```\\n\\nUpdate a `Trigger`&#039;s details.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| triggerUpdateInput | -- | TriggerUpdateInput | *TriggerUpdateInput* | Yes |  | No |\\n\\n\\n**TriggerUpdateInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| trigger_id | `Trigger` ID to update against | ID | [ID](/api-docs/id) | Yes |  | No |\\n| name | `Trigger` name | String | [String](/api-docs/string) | No |  | No |\\n| comments | Any additional user comments for the audit | String | [String](/api-docs/string) | No |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Boolean | [Boolean](/api-docs/boolean) |\\n\\n\\n\\n\\n---\\n\\n### Delete Trigger\\n\\n```graphql\\ndeleteTrigger(triggerDeleteInput: TriggerDeleteInput!): [ModelDeleteAcknowledgement]\\n\\n```\\n\\nDelete a `Trigger` and its children.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| triggerDeleteInput | -- | TriggerDeleteInput | *TriggerDeleteInput* | Yes |  | No |\\n\\n\\n**TriggerDeleteInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| trigger_id | `Trigger` ID to delete against | ID | [ID](/api-docs/id) | Yes |  | No |\\n| preview | If true, we can do a dry-run and check what the outcome of this delete will be before commiting to it | Boolean | [Boolean](/api-docs/boolean) | No | false | No |\\n| comments | Any additional user comments for the audit | String | [String](/api-docs/string) | No |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| List[ModelDeleteAcknowledgement] | [ModelDeleteAcknowledgement](/api-docs/model-delete-acknowledgement) |\\n\\n\\n\\n\\n---\\n\\n### Update Events Order\\n\\n```graphql\\nupdateEventsOrder(triggerOrderInput: TriggerOrderInput!): Boolean\\n\\n```\\n\\nUpdate the order of `Event`&#039;s curently linked to `Trigger`\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| triggerOrderInput | -- | TriggerOrderInput | *TriggerOrderInput* | Yes |  | No |\\n\\n\\n**TriggerOrderInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| trigger_id | `Trigger` ID to order rules against | ID | [ID](/api-docs/id) | Yes |  | No |\\n| new_order | A new order of entity IDs | List[ID] | [ID](/api-docs/id) | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Boolean | [Boolean](/api-docs/boolean) |\\n\\n\\n\\n\\n---\\n\\n### Update Conditions Order\\n\\n```graphql\\nupdateConditionsOrder(triggerOrderInput: TriggerOrderInput!): Boolean\\n\\n```\\n\\nUpdate the order of `Condition`&#039;s curently linked to `Trigger`\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| triggerOrderInput | -- | TriggerOrderInput | *TriggerOrderInput* | Yes |  | No |\\n\\n\\n**TriggerOrderInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| trigger_id | `Trigger` ID to order rules against | ID | [ID](/api-docs/id) | Yes |  | No |\\n| new_order | A new order of entity IDs | List[ID] | [ID](/api-docs/id) | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Boolean | [Boolean](/api-docs/boolean) |\\n\\n\\n\\n\\n---\\n\\n### Update Exceptions Order\\n\\n```graphql\\nupdateExceptionsOrder(triggerOrderInput: TriggerOrderInput!): Boolean\\n\\n```\\n\\nUpdate the order of `Exception`&#039;s curently linked to `Trigger`\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| triggerOrderInput | -- | TriggerOrderInput | *TriggerOrderInput* | Yes |  | No |\\n\\n\\n**TriggerOrderInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| trigger_id | `Trigger` ID to order rules against | ID | [ID](/api-docs/id) | Yes |  | No |\\n| new_order | A new order of entity IDs | List[ID] | [ID](/api-docs/id) | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Boolean | [Boolean](/api-docs/boolean) |\\n\\n\\n\\n"}')}}]);