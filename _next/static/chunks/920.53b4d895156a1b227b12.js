(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[920],{60920:function(e){"use strict";e.exports=JSON.parse('{"md":"\\n# Event\\n\\n\\n\\n| Field | Description | Type | Reference | Nullable | Deprecated |\\n|-------|-------------|------|-----------|----------|------------|\\n| id | The `Event` ID | ID | [ID](/api-docs/id) | No | No |\\n| name | The `Event` name | String | [String](/api-docs/string) | No | No |\\n| event | Either a `CustomEvent` or `PlatformEvent` | EventType | [EventType](/api-docs/event-type) | No | No |\\n| data_maps | `DataMap`&#039;s that implements the `PlatformDataMap` of the connected `PlatformEvent` | List[DataMap] | [DataMap](/api-docs/data-map) | No | No |\\n| clear_state_ms | The period after which the event state should be cleared. -1 = Inactive, 0 = Immidately, &gt; 0, after some time specified in milliseconds. This useful for events that need to be re-triggered within some period of time to pass the check stage. | Int | [Int](/api-docs/int) | No | No |\\n\\n## Queries\\n\\n*Queries provide a function on the graph to access Event entities. This should be considered the same as RESTful \'GET\'*\\n\\n---\\n\\n### Get Event\\n\\n```graphql\\ngetEvent(id: ID!): Event\\n\\n```\\n\\nGet a `Event` model from the `Event` ID\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| id | -- | ID | [ID](/api-docs/id) | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Event | [Event](/api-docs/event) |\\n\\n\\n\\n\\n## Mutations\\n\\n*Mutations enable us to create, modify and delete Event entities. POST/PUT/DELETE methods in a RESTful API would typically provide this functionality*\\n\\n---\\n\\n### Update Event\\n\\n```graphql\\nupdateEvent(eventUpdateInput: EventUpdateInput!): Boolean\\n\\n```\\n\\nUpdate an `Event`.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| eventUpdateInput | -- | EventUpdateInput | *EventUpdateInput* | Yes |  | No |\\n\\n\\n**EventUpdateInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| event_id | `Event` ID to update against | ID | [ID](/api-docs/id) | Yes |  | No |\\n| name | The name of the event | String | [String](/api-docs/string) | No |  | No |\\n| data_maps | An array of `DataMapInput` that will create corresponding `DataMap`&#039;s and implement the `PlatformDataMap` of the connected `PlatformEvent` | List[DataMapInput] | *DataMapInput* | Yes |  | No |\\n| clear_state_ms | The period after which the event state should be cleared. -1 = Inactive, 0 = Immidately, &gt; 0, after some time specified in milliseconds. | Int | [Int](/api-docs/int) | No |  | No |\\n| comments | Any additional user comments for the audit | String | [String](/api-docs/string) | No |  | No |\\n\\n**DataMapInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| key | `DataMap` key | String | [String](/api-docs/string) | Yes |  | No |\\n| var_type | `DataMap` variable type (string, int, boolean, array of strings, object etc.) | VarType | [VarType](/api-docs/var-type) | Yes |  | No |\\n| value | A single value, string, int, boolean etc. | DataMapValue | [DataMapValue](/api-docs/data-map-value) | No |  | No |\\n| values | An array of values, string[], int[], boolean[] etc. | List[DataMapValue] | [DataMapValue](/api-docs/data-map-value) | Yes |  | No |\\n| children | A single object, {...} | List[DataMapInput] | *DataMapInput* | Yes |  | No |\\n| repeated_children | An array of objects, {...}[] | List[List[DataMapInput]] | *DataMapInput* | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Boolean | [Boolean](/api-docs/boolean) |\\n\\n\\n\\n\\n---\\n\\n### Create Event\\n\\n```graphql\\ncreateEvent(eventCreateInput: EventCreateInput!): Event\\n\\n```\\n\\nCreate a new `Event`.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| eventCreateInput | -- | EventCreateInput | *EventCreateInput* | Yes |  | No |\\n\\n\\n**EventCreateInput**\\n\\n*Either &#039;browser_event&#039; or &#039;platform_event_id&#039; is required.*\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| trigger_id | The `Trigger` under which the `Event` should be created | ID | [ID](/api-docs/id) | Yes |  | No |\\n| name | The name of the event | String | [String](/api-docs/string) | No |  | No |\\n| browser_event | The custom browser event | String | [String](/api-docs/string) | No |  | No |\\n| platform_event_id | The `PlatformEvent` ID | ID | [ID](/api-docs/id) | No |  | No |\\n| data_maps | An array of `DataMapInput` that will create corresponding `DataMap`&#039;s and implement the `PlatformDataMap` of the connected `PlatformEvent` | List[DataMapInput] | *DataMapInput* | Yes |  | No |\\n| clear_state_ms | The period after which the event state should be cleared. -1 = Inactive, 0 = Immidately, &gt; 0, after some time specified in milliseconds. | Int | [Int](/api-docs/int) | No | -1 | No |\\n| comments | Any additional user comments for the audit | String | [String](/api-docs/string) | No |  | No |\\n\\n**DataMapInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| key | `DataMap` key | String | [String](/api-docs/string) | Yes |  | No |\\n| var_type | `DataMap` variable type (string, int, boolean, array of strings, object etc.) | VarType | [VarType](/api-docs/var-type) | Yes |  | No |\\n| value | A single value, string, int, boolean etc. | DataMapValue | [DataMapValue](/api-docs/data-map-value) | No |  | No |\\n| values | An array of values, string[], int[], boolean[] etc. | List[DataMapValue] | [DataMapValue](/api-docs/data-map-value) | Yes |  | No |\\n| children | A single object, {...} | List[DataMapInput] | *DataMapInput* | Yes |  | No |\\n| repeated_children | An array of objects, {...}[] | List[List[DataMapInput]] | *DataMapInput* | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Event | [Event](/api-docs/event) |\\n\\n\\n\\n\\n---\\n\\n### Delete Event\\n\\n```graphql\\ndeleteEvent(eventDeleteInput: EventDeleteInput!): [ModelDeleteAcknowledgement]\\n\\n```\\n\\nDelete an `Event` and its children.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| eventDeleteInput | -- | EventDeleteInput | *EventDeleteInput* | Yes |  | No |\\n\\n\\n**EventDeleteInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| event_id | `Event` ID to delete against | ID | [ID](/api-docs/id) | Yes |  | No |\\n| comments | Any additional user comments for the audit | String | [String](/api-docs/string) | No |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| List[ModelDeleteAcknowledgement] | [ModelDeleteAcknowledgement](/api-docs/model-delete-acknowledgement) |\\n\\n\\n\\n"}')}}]);