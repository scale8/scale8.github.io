(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[2114],{12114:function(e){"use strict";e.exports=JSON.parse('{"md":"\\n# Tag\\n\\nTags contain `RuleGroup`&#039;s that describe under what events and conditions a tag execute certain actions.\\n\\n| Field | Description | Type | Reference | Nullable | Deprecated |\\n|-------|-------------|------|-----------|----------|------------|\\n| id | Tag ID | ID | [ID](/api-docs/id) | No | No |\\n| name | Tag name | String | [String](/api-docs/string) | No | No |\\n| tag_code | Tag code, this persists when cloned. It is generated by the parent tag and inherited by all other tags cloned from this point. It is immutable by design. | String | [String](/api-docs/string) | No | No |\\n| revision | Revision | Revision | [Revision](/api-docs/revision) | No | No |\\n| type | Tag type, see `TagType` | TagType | [TagType](/api-docs/tag-type) | No | No |\\n| rule_groups | A set of `RuleGroup`s attached to this tag. | List[RuleGroup] | [RuleGroup](/api-docs/rule-group) | No | No |\\n| width | An optional width parameter, used for placements. | Int | [Int](/api-docs/int) | No | No |\\n| height | An optional height parameter, used for placements. | Int | [Int](/api-docs/int) | No | No |\\n| auto_load | If the tag should be automatically loaded on all pages. | Boolean | [Boolean](/api-docs/boolean) | No | No |\\n| is_active | If the `Tag` is active or inactive. If this property is set to false, the tag will be ignored | Boolean | [Boolean](/api-docs/boolean) | No | No |\\n| created_at | Date the tag was created | DateTime | [DateTime](/api-docs/date-time) | No | No |\\n| updated_at | Date the tag was last updated | DateTime | [DateTime](/api-docs/date-time) | No | No |\\n\\n## Queries\\n\\n*Queries provide a function on the graph to access Tag entities. This should be considered the same as RESTful \'GET\'*\\n\\n---\\n\\n### Get Tag\\n\\n```graphql\\ngetTag(id: ID!): Tag\\n\\n```\\n\\nGet an Tag model from the Tag ID\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| id | -- | ID | [ID](/api-docs/id) | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Tag | [Tag](/api-docs/tag) |\\n\\n\\n\\n\\n## Mutations\\n\\n*Mutations enable us to create, modify and delete Tag entities. POST/PUT/DELETE methods in a RESTful API would typically provide this functionality*\\n\\n---\\n\\n### Create Tag\\n\\n```graphql\\ncreateTag(tagCreateInput: TagCreateInput!): Tag\\n\\n```\\n\\nCreate a new `Tag`. `Revision` ID is required here to ensure `Tag` is placed inside the correct version\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| tagCreateInput | -- | TagCreateInput | *TagCreateInput* | Yes |  | No |\\n\\n\\n**TagCreateInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| revision_id | The `Revision` under which the `Tag` should be created | ID | [ID](/api-docs/id) | Yes |  | No |\\n| name | The name of the new `Tag` | String | [String](/api-docs/string) | Yes |  | No |\\n| type | The type of `Tag` to be created | TagType | [TagType](/api-docs/tag-type) | Yes |  | No |\\n| width | An optional width parameter, used for placements. | Int | [Int](/api-docs/int) | No | 0 | No |\\n| height | An optional height parameter, used for placements. | Int | [Int](/api-docs/int) | No | 0 | No |\\n| auto_load | Auto-load tag. Only avalible to HEAD tags. | Boolean | [Boolean](/api-docs/boolean) | No | false | No |\\n| comments | Any additional user comments for the audit | String | [String](/api-docs/string) | No |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Tag | [Tag](/api-docs/tag) |\\n\\n\\n\\n\\n---\\n\\n### Duplicate Tag\\n\\n```graphql\\nduplicateTag(tagDuplicateInput: TagDuplicateInput!): Tag\\n\\n```\\n\\nDuplicate a new `Tag`. The duplicated will copy everything beneath `Tag`, creating a new `Tag` entity and linking it to the same Revision\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| tagDuplicateInput | -- | TagDuplicateInput | *TagDuplicateInput* | Yes |  | No |\\n\\n\\n**TagDuplicateInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| tag_id | `Tag` ID to clone against | ID | [ID](/api-docs/id) | Yes |  | No |\\n| name | New name for the `Tag` | String | [String](/api-docs/string) | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Tag | [Tag](/api-docs/tag) |\\n\\n\\n\\n\\n---\\n\\n### Update Tag\\n\\n```graphql\\nupdateTag(tagUpdateInput: TagUpdateInput!): Boolean\\n\\n```\\n\\nUpdate a `Tag`&#039;s details.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| tagUpdateInput | -- | TagUpdateInput | *TagUpdateInput* | Yes |  | No |\\n\\n\\n**TagUpdateInput**\\n\\n*Update a `Tag`&#039;s properties. Please note that `TagType` can&#039;t be changed once a tag has been created.*\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| tag_id | `Tag` ID to update data against | ID | [ID](/api-docs/id) | Yes |  | No |\\n| name | `Tag` name | String | [String](/api-docs/string) | No |  | No |\\n| is_active | If the `Tag` should be active or not | Boolean | [Boolean](/api-docs/boolean) | No |  | No |\\n| width | `Tag` width, used for placements | Int | [Int](/api-docs/int) | No |  | No |\\n| height | `Tag` height, used for placements | Int | [Int](/api-docs/int) | No |  | No |\\n| auto_load | Auto-load tag. Only avalible to HEAD tags. | Boolean | [Boolean](/api-docs/boolean) | No |  | No |\\n| comments | Any additional user comments for the audit | String | [String](/api-docs/string) | No |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Boolean | [Boolean](/api-docs/boolean) |\\n\\n\\n\\n\\n---\\n\\n### Delete Tag\\n\\n```graphql\\ndeleteTag(tagDeleteInput: TagDeleteInput!): [ModelDeleteAcknowledgement]\\n\\n```\\n\\nDelete a `Tag` and its children.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| tagDeleteInput | -- | TagDeleteInput | *TagDeleteInput* | Yes |  | No |\\n\\n\\n**TagDeleteInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| tag_id | `Tag` ID to delete against | ID | [ID](/api-docs/id) | Yes |  | No |\\n| preview | If true, we can do a dry-run and check what the outcome of this delete will be before commiting to it | Boolean | [Boolean](/api-docs/boolean) | No | false | No |\\n| comments | Any additional user comments for the audit | String | [String](/api-docs/string) | No |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| List[ModelDeleteAcknowledgement] | [ModelDeleteAcknowledgement](/api-docs/model-delete-acknowledgement) |\\n\\n\\n\\n\\n---\\n\\n### Update Rule Groups Order\\n\\n```graphql\\nupdateRuleGroupsOrder(tagRuleGroupOrderInput: TagRuleGroupOrderInput!): Boolean\\n\\n```\\n\\nUpdate the order of `RuleGroup`&#039;s curently linked to `Tag`\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| tagRuleGroupOrderInput | -- | TagRuleGroupOrderInput | *TagRuleGroupOrderInput* | Yes |  | No |\\n\\n\\n**TagRuleGroupOrderInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| tag_id | `Tag` ID to re-order rule groups against | ID | [ID](/api-docs/id) | Yes |  | No |\\n| new_order | A new order of `RuleGroup`&#039;s IDs | List[ID] | [ID](/api-docs/id) | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Boolean | [Boolean](/api-docs/boolean) |\\n\\n\\n\\n"}')}}]);