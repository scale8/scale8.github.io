(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[1847],{91847:function(n){"use strict";n.exports=JSON.parse('{"md":"\\n# ConditionRule\\n\\n\\n\\n| Field | Description | Type | Reference | Nullable | Deprecated |\\n|-------|-------------|------|-----------|----------|------------|\\n| id | `ConditionRule` ID | ID | [ID](/api-docs/id) | No | No |\\n| name | `ConditionRule` name | String | [String](/api-docs/string) | No | No |\\n| match | `ConditionRule` type, see `ConditionMatch` enum. | ConditionMatch | [ConditionMatch](/api-docs/condition-match) | No | No |\\n| match_key | Match key (used on object types) | String | [String](/api-docs/string) | Yes | No |\\n| match_condition | Match condition, see `ConditionType` enum. | ConditionType | [ConditionType](/api-docs/condition-type) | No | No |\\n| match_value | Match value (see `DataMapValue`), the value to match againt data property key specificed by `ConditionMatch`. | DataMapValue | [DataMapValue](/api-docs/data-map-value) | No | No |\\n| platform_data_container | The `PlatformDataContainer` to match against | PlatformDataContainer | [PlatformDataContainer](/api-docs/platform-data-container) | No | No |\\n\\n## Queries\\n\\n*Queries provide a function on the graph to access ConditionRule entities. This should be considered the same as RESTful \'GET\'*\\n\\n---\\n\\n### Get Condition Rule\\n\\n```graphql\\ngetConditionRule(id: ID!): ConditionRule\\n\\n```\\n\\nGet a `ConditionRule` model from the `ConditionRule` ID\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| id | -- | ID | [ID](/api-docs/id) | Yes |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| ConditionRule | [ConditionRule](/api-docs/condition-rule) |\\n\\n\\n\\n\\n## Mutations\\n\\n*Mutations enable us to create, modify and delete ConditionRule entities. POST/PUT/DELETE methods in a RESTful API would typically provide this functionality*\\n\\n---\\n\\n### Create Condition Rule\\n\\n```graphql\\ncreateConditionRule(conditionRuleCreateInput: ConditionRuleCreateInput!): Rule\\n\\n```\\n\\nCreate a new `ConditionRule`. `Trigger` ID is required here to ensure `ConditionRule` is placed inside the correct `Trigger`\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| conditionRuleCreateInput | -- | ConditionRuleCreateInput | *ConditionRuleCreateInput* | Yes |  | No |\\n\\n\\n**ConditionRuleCreateInput**\\n\\n*Either &#039;match&#039; or &#039;match_id&#039; must be provided. See `ConditionMatch` for more information.*\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| condition_mode | Is this a condition or exception when attaching to the `Trigger`? | ConditionMode | [ConditionMode](/api-docs/condition-mode) | Yes |  | No |\\n| trigger_id | The `Trigger` under which the `ConditionRule` should be created | ID | [ID](/api-docs/id) | Yes |  | No |\\n| platform_data_container_id | The `PlatformDataContainer` under which data layer exists | ID | [ID](/api-docs/id) | Yes |  | No |\\n| name | The name of the new `ConditionRule` | String | [String](/api-docs/string) | Yes |  | No |\\n| match | The custom value to match against | String | [String](/api-docs/string) | No |  | No |\\n| match_key | Match key (used on object types) | String | [String](/api-docs/string) | No |  | No |\\n| match_id | The `PlatformDataMap` value to match against | ID | [ID](/api-docs/id) | No |  | No |\\n| match_condition | The `PlatformDataMap` condition to match against. See `ConditionType` enum. | ConditionType | [ConditionType](/api-docs/condition-type) | Yes |  | No |\\n| match_value | The `PlatformDataMap` value to match against (see `DataMapValue`). | DataMapValue | [DataMapValue](/api-docs/data-map-value) | Yes |  | No |\\n| comments | Any additional user comments for the audit | String | [String](/api-docs/string) | No |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Rule | [Rule](/api-docs/rule) |\\n\\n\\n\\n\\n---\\n\\n### Update Condition Rule\\n\\n```graphql\\nupdateConditionRule(conditionRuleUpdateInput: ConditionRuleUpdateInput!): Boolean\\n\\n```\\n\\nUpdate a `ConditionRule`.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| conditionRuleUpdateInput | -- | ConditionRuleUpdateInput | *ConditionRuleUpdateInput* | Yes |  | No |\\n\\n\\n**ConditionRuleUpdateInput**\\n\\n*Either &#039;match&#039; or &#039;match_id&#039; must be provided when updating a match value. See `ConditionMatch` for more information.*\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| condition_rule_id | `ConditionRule` ID to update against | ID | [ID](/api-docs/id) | Yes |  | No |\\n| name | The name of the new `ConditionRule` | String | [String](/api-docs/string) | No |  | No |\\n| match | The custom value to match against | String | [String](/api-docs/string) | No |  | No |\\n| match_id | The `PlatformDataMap` value to match against | ID | [ID](/api-docs/id) | No |  | No |\\n| match_key | Match key (used on object types) | String | [String](/api-docs/string) | No |  | No |\\n| match_condition | The `PlatformDataMap` condition to match against. See `ConditionType` enum. | ConditionType | [ConditionType](/api-docs/condition-type) | No |  | No |\\n| match_value | The `PlatformDataMap` value to match against (see `DataMapValue`). | DataMapValue | [DataMapValue](/api-docs/data-map-value) | No |  | No |\\n| comments | Any additional user comments for the audit | String | [String](/api-docs/string) | No |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| Boolean | [Boolean](/api-docs/boolean) |\\n\\n\\n\\n\\n---\\n\\n### Delete Condition Rule\\n\\n```graphql\\ndeleteConditionRule(conditionRuleDeleteInput: ConditionRuleDeleteInput!): [ModelDeleteAcknowledgement]\\n\\n```\\n\\nDelete a `ConditionRule` and its children.\\n\\n**Arguments: -**\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| conditionRuleDeleteInput | -- | ConditionRuleDeleteInput | *ConditionRuleDeleteInput* | Yes |  | No |\\n\\n\\n**ConditionRuleDeleteInput**\\n\\n\\n| Name | Description | Type | Reference | Required | Default Value | Deprecated |\\n|------|-------------|------|-----------|----------|---------------|------------|\\n| condition_rule_id | `ConditionRule` ID to delete against | ID | [ID](/api-docs/id) | Yes |  | No |\\n| comments | Any additional user comments for the audit | String | [String](/api-docs/string) | No |  | No |\\n\\n\\n**Returns: -**\\n\\n| Type | Reference |\\n|------|-----------|\\n| List[ModelDeleteAcknowledgement] | [ModelDeleteAcknowledgement](/api-docs/model-delete-acknowledgement) |\\n\\n\\n\\n"}')}}]);